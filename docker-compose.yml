services:
  # Backend API - FastAPI WebSocket Server
  puertocho-backend:
    build: 
      context: ./puertocho-assistant-backend
      dockerfile: Dockerfile
    container_name: puertocho-assistant-backend
    ports:
      - "8765:8765"
    environment:
      - PYTHONUNBUFFERED=1
      - BACKEND_HOST=0.0.0.0
      - BACKEND_PORT=8765
      - BACKEND_LOG_LEVEL=INFO
    volumes:
      - ./puertocho-assistant-backend/src:/app/src
    networks:
      - puertocho-network
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8765/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

  # Web Dashboard - Svelte Frontend
  puertocho-web-dashboard:
    build:
      context: ./puertocho-assistant-web-view
      dockerfile: Dockerfile
    container_name: puertocho-web-dashboard
    ports:
      - "3000:3000"
    environment:
      - NODE_ENV=production
      - VITE_BACKEND_WS_URL=ws://localhost:8765/ws
      - VITE_BACKEND_HTTP_URL=http://localhost:8765
    networks:
      - puertocho-network
    depends_on:
      - puertocho-backend
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "wget", "--quiet", "--tries=1", "--spider", "http://127.0.0.1:3000"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

  # Hardware Service - ReSpeaker 2-Mic Pi HAT V1.0 with RGB LEDs
  puertocho-assistant-hardware:
    build:
      context: ./puertocho-assistant-hardware
      dockerfile: Dockerfile
    container_name: puertocho-assistant-hardware
    privileged: true
    network_mode: host
    env_file:
      - .env
    environment:
      - PYTHONUNBUFFERED=1
      - HARDWARE_LOG_LEVEL=INFO
      - BACKEND_URL=http://localhost:8765
      - BACKEND_WS_URL=ws://localhost:8765/ws
    volumes:
      - /dev:/dev
      - /sys:/sys
      - /proc:/proc
      - /var/run/dbus:/var/run/dbus
      - ./puertocho-assistant-hardware/app:/app
      - puertocho-logs:/app/logs
      - puertocho-config:/app/config
    devices:
      - /dev/i2c-1:/dev/i2c-1
      - /dev/spidev0.0:/dev/spidev0.0
      - /dev/spidev0.1:/dev/spidev0.1
    depends_on:
      - puertocho-backend
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8080/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

networks:
  puertocho-network:
    driver: bridge
    name: puertocho-assistant-network

# Volumes para persistencia (futuro)
volumes:
  puertocho-logs:
    driver: local
  puertocho-config:
    driver: local
